import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id "java-library"
    id "eclipse"
    id "maven-publish"
    id "com.rhombus.version" version '1.0.7'
}

apply from: "https://nexus.rhombus.corp/repository/maven/com/rhombus/gradle/gradle-library/1.0.36/gradle-library-1.0.36.gradle"

ext {
    dashdiveSdkVersion = "1.0.0" 
    awsJavaSdkVersion = "2.17.3"
}

version = dashdiveSdkVersion

javadoc {
    dependsOn('compileJava')
    
    destinationDir = file('build/docs/javadoc')
    include 'com/dashdive/*.java'
    exclude 'com/dashdive/internal/**'

    source = files(
        sourceSets.main.java.srcDirs,
        file('build/generated/sources/annotationProcessor/java/main')
    ).asFileTree

    title = "Dashdive Collector SDK - ${dashdiveSdkVersion}"
    
    options {
        links(
            'https://docs.oracle.com/en/java/javase/11/docs/api/',
            'https://sdk.amazonaws.com/java/api/latest/')
    }
}

tasks.named('build') {
    dependsOn('javadoc')
}

dependencies {
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.10.0'

    api platform("software.amazon.awssdk:bom:${awsJavaSdkVersion}")
    api 'software.amazon.awssdk:s3'
    
    implementation 'org.slf4j:slf4j-api:1.7.25'
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.12'

    implementation 'org.apache.commons:commons-lang3:3.14.0'

    implementation platform('com.fasterxml.jackson:jackson-bom:2.16.2')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

    implementation 'com.google.guava:guava:32.1.3-jre'

    def immutablesVersion = '2.10.1'
    annotationProcessor "org.immutables:value:${immutablesVersion}"
    testAnnotationProcessor "org.immutables:value:${immutablesVersion}"
    implementation "org.immutables:value:${immutablesVersion}"
    implementation "org.immutables:builder:${immutablesVersion}"
}

boolean isImplemented_ServiceClientConfig() {
    def versionParts = awsJavaSdkVersion.split('\\.')
    def majorVersion = versionParts[0].toInteger()
    def minorVersion = versionParts.size() > 1 ? versionParts[1].toInteger() : 0
    def patchVersion = versionParts.size() > 2 ? versionParts[2].toInteger() : 0
    return majorVersion >= 2 && minorVersion >= 20 && patchVersion >= 32
}

void excludeConditionally(SourceSet sourceSet, Closure condition, String... paths) {
    if (condition()) {
        sourceSet.java.exclude(paths)
    }
}

sourceSets {
    test {
        excludeConditionally(
            it,
            { !isImplemented_ServiceClientConfig() },
            '**/InterceptorIdempotencyTest.java'
        )
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

task formatSource(type: Exec) {
    commandLine 'sh', '-c', 'find src -name "*.java" -exec google-java-format -r {} +'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = TestExceptionFormat.FULL
    }
    // Necessary to silence Mockito warnings: https://github.com/mockito/mockito/issues/3037
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}